module Single_Cycle_Top #(
    parameter N = 32
    )(
    input clk, rst
    );
    wire [N-1:0] PC_Top, RD_Instr, ORD2, ReadData, ImmExt, SrcA, SrcB, ALUResult, Result, WriteData, PcPlus4;
    wire [1:0] ImmSrc;
    wire [2:0] ALUControl_Top;
    
    wire RegWrite, MemWrite, ALUSrc, ResultSrc;
    Program_Counter PC_module(
        .clk(clk),
        .rst(rst),
        .PC(PC_Top),
        .PC_NEXT(PcPlus4)
    );

    PC_Adder PC_Adder(
        .a(PC_Top),
        .b(32'd4),
        .c(PcPlus4)
    );

    Instr_Mem Instr_Memory(
        .A(PC_Top),
        .rst(rst),
        .RD(RD_Instr)
    );
    Reg_file Register_File(
        .clk(clk),
        .rst(rst),
        .WE3(RegWrite),
        .WD3(Result),
        .A1(RD_Instr[19:15]),
        .A2(RD_Instr[24:20]),
        .A3(RD_Instr[11:7]),
        .RD1(SrcA),
        .RD2(WriteData)
    );
    Sign_Extend Sign_Extend(
        .in(RD_Instr[31:20]),
        .out(ImmExt),
        .ImmSrc(ImmSrc[0])
    );
    ALU_2 ALU(
        .A(SrcA),
        .B(SrcB),
        .ALUControl(ALUControl),
        .V(), 
        .C(), 
        .N(), 
        .Z(), 
        .Result(ALUResult)
    );
    Data_Memory Data_Memory(
        .A(ALUResult),
        .WD(WriteData),
        .RD(ReadData),
        .WE(MemWrite),
        .clk(clk)
    );
    mux Mux_Register_to_ALU(
        .A(WriteData),
        .B(ImmExt),
        .O(SrcB),
        .clk(clk),
        .sel(ALUSrc)
    );
    mux Mux_Result(
        .A(ALUResult),
        .B(ReadData),
        .O(Result),
        .clk(clk),
        .sel(ResultSrc)
    );
    Control_Unit Control_Unit(
        .Op(RD_Instr[6:0]),
        .funct7(RD_Instr[30]),
        .funct3(RD_Instr[14:12]),
        .PCSrc(PCSrc), 
        .ResultSrc(ResultSrc), 
        .MemWrite(MemWrite), 
        .ALUSrc(ALUSrc), 
        .Regwrite(Regwrite),
        .ImmSrc(ImmSrc),
        .ALUControl(ALUControl)
    );
endmodule
